// Generated by CoffeeScript 1.7.1
var changeView, fileTree, getSectors, listComment, openNewSector, openNewSubproyecto, openUpdateSector, openUpdateSubproject, openWindow, publisherCommnet, setSubproject, toggleComment, treeAdminaandOpera, uploadFiles;

$(document).ready(function() {
  $(".new-sector").on("click", openNewSector);
  $(document).on("click", ".btn-edit-sector", openUpdateSector);
  $(".new-subproject").on("click", openNewSubproyecto);
  $(document).on("click", "#accordion > .panel-primary", setSubproject);
  $(document).on("click", ".btn-edit-sub", openUpdateSubproject);
  $(".btn-responsible").on("click", function() {
    return $(".mresponsible").modal("show");
  });
  $(".btn-files").on("click", function() {
    return $(".mfiles").modal("show");
  });
  $(".btn-cuadro").on("click", function(evetn) {
    return changeView(23);
  });
  $(".btn-list").on("click", function(event) {
    return changeView(100);
  });
  $(".btn-admin").on("click", function() {
    return $("[name=administrative]").click();
  });
  $(".btn-opera").on("click", function() {
    return $("[name=operation]").click();
  });
  $(".btn-upload-files").on("click", uploadFiles);
  $(".btn-show-comment").on("click", toggleComment);
  $("#message").focus(function() {
    $(this).animate({
      "height": "102px"
    }, 500);
  }).blur(function() {
    $(this).animate({
      "height": "34px"
    }, 500);
  });
  treeAdminaandOpera();
  tinymce.init({
    selector: "textarea#message",
    theme: "modern",
    menubar: false,
    statusbar: false,
    plugins: "link contextmenu",
    font_size_style_values: "10px,12px,13px,14px,16px,18px,20px",
    toolbar: "undo redo | styleselect | fontsizeselect |"
  });
  $(".btn-publisher").on("click", publisherCommnet);
});

publisherCommnet = function() {
  var data;
  data = new Object();
  data.edit = $("input[name=edit-message]").val();
  data.message = $("#message_ifr").contents().find('body').html();
  if (data.message === "<p><br data-mce-bogus=\"1\"></p>") {
    $().toastmessage("showWarningToast", "No se puede publicar el mensaje, campo vacio.");
    return false;
  }
  if (data.edit === "") {
    data.type = "edit";
  } else {
    data.type = "add";
  }
  data.csrfmiddlewaretoken = $("input[name=csrfmiddlewaretoken]").val();
  $.post("", data, function(response) {
    if (response.status) {
      return listComment();
    }
  });
};

listComment = function() {
  $.getJSON("", {
    "list": "comment"
  }, function(response) {
    var template;
    if (response.status) {
      return template = "";
    }
  });
};

toggleComment = function() {
  $(".panel-comment").find(".panel-body").toggle(function() {
    if ($(this).is(":hidden")) {
      $(".btn-show-comment").find("span").removeClass("glyphicon-chevron-up").addClass("glyphicon-chevron-down");
      return $(".panel-comment").css("height", "1em");
    } else {
      $(".btn-show-comment").find("span").removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-up");
      return $(".panel-comment").css("height", "20em");
    }
  });
};

treeAdminaandOpera = function() {
  var admin, opera;
  if ($("input[name=sub]").val() === "") {
    admin = "/storage/projects/" + ($("input[name=pro]").val()) + "/administrative/";
    opera = "/storage/projects/" + ($("input[name=pro]").val()) + "/operation/";
  } else {
    admin = "/storage/projects/" + ($("input[name=pro]").val()) + "/" + ($("input[name=sub]").val()) + "/administrative/";
    opera = "/storage/projects/" + ($("input[name=pro]").val()) + "/" + ($("input[name=sub]").val()) + "/operation/";
  }
  fileTree('filetree_administrative', admin);
  fileTree('filetree_operation', opera);
};

fileTree = function(id, path) {
  $("#" + id).fileTree({
    root: path,
    script: "/json/get/path/",
    folderEvent: "click",
    expandSpeed: 750,
    collapseSpeed: 750,
    multiFolder: true
  }, function(file) {
    return window.open(file, "_blank");
  });
};

setSubproject = function(event) {
  console.log($(this).attr("data-sub"));
  $("input[name=sub]").val($(this).attr("data-sub"));
  if ($("input[name=sub]").val() !== "") {
    $(".header-project > .info-sub").remove();
    $(".header-project").append("<p class=\"info-sub\"><strong>Subproyecto :</strong> " + ($(".text-" + $(this).attr("data-sub")).html()) + " <strong> Codigo :</strong> " + ($(this).attr("data-sub")) + "</p>");
  } else {
    $("input[name=sub]").val();
    $(".header-project > .info-sub").remove();
  }
  getSectors();
};

getSectors = function() {
  var data, url;
  data = new Object();
  data.pro = $("input[name=pro]").val();
  data.sub = $("input[name=sub]").val();
  url = "/sales/projects/sectors/crud/";
  $.getJSON(url, data, function(response) {
    var $list, $sec, template, templist, x;
    if (response.status) {
      if (data.sub === "") {
        data.sub = "None";
      }
      template = "<article> <button class=\"btn btn-xs text-black btn-link pull-left btn-edit-sector\" value=\"{{ sector_id }}\"> <span class=\"glyphicon glyphicon-pencil\"></span> </button> <button class=\"btn btn-xs text-black btn-link pull-right\" value=\"{{ sector_id }}\"> <span class=\"glyphicon glyphicon-trash\"></span> </button> <a href=\"/sales/projects/manager/sector/" + data.pro + "/" + data.sub + "/{{ sector_id }}/\" class=\"text-black\"> {{ sector_id }} {{ nomsec }} <small>{{ planoid }}</small> </a> </article>";
      templist = "<li><a href=\"/sales/projects/manager/sector/" + data.pro + "/" + data.sub + "/{{ sector_id }}/\" class=\"text-black\"><span class=\"glyphicon glyphicon-chevron-right\"></span> {{ nomsec }}</a></li>";
      $list = data['sub'] === "" ? $(".sectorsdefault") : $(".sectors" + data['sub']);
      console.log($list);
      $sec = $(".all-sectors");
      $sec.empty();
      $list.empty();
      for (x in response.list) {
        $sec.append(Mustache.render(template, response.list[x]));
        $list.append(Mustache.render(templist, response.list[x]));
      }
      equalheight(".all-sectors article");
    } else {
      return $().toastmessage("showErrorToast", "Error, transaction not complete. " + response.raise);
    }
  });
};

openNewSector = function(event) {
  var pro, sub, url;
  pro = $("input[name=pro]").val();
  sub = $("input[name=sub]").val();
  url = "/sales/projects/sectors/crud/?pro=" + pro + "&sub=" + sub + "&type=new";
  openWindow(url);
};

openUpdateSector = function(event) {
  var pro, sec, sub, url;
  pro = $("input[name=pro]").val();
  sub = $("input[name=sub]").val();
  sec = this.value;
  url = "/sales/projects/sectors/crud/?pro=" + pro + "&sub=" + sub + "&sec=" + sec + "&type=update";
  openWindow(url);
};

openNewSubproyecto = function(event) {
  var pro, url;
  pro = $("input[name=pro]").val();
  url = "/sales/projects/subprojects/crud/?pro=" + pro + "&type=new";
  openWindow(url);
};

openUpdateSubproject = function(event) {
  var pro, sub, url;
  pro = $("input[name=pro]").val();
  sub = this.value;
  url = "/sales/projects/subprojects/crud/?pro=" + pro + "&sub=" + sub + "&type=update";
  openWindow(url);
};

openWindow = function(url) {
  var interval, win;
  win = window.open(url, "Popup", "toolbar=no, scrollbars=yes, resizable=no, width=400, height=600");
  interval = window.setInterval(function() {
    if (win === null || win.closed) {
      window.clearInterval(interval);
      getSectors();
    }
  }, 1000);
  return win;
};

changeView = function(percent) {
  $(".all-sectors > article").css({
    "width": "" + percent + "%"
  });
  equalheight(".all-sectors article");
};

uploadFiles = function(event) {
  var data;
  data = new FormData();
  $("input[name=administrative], input[name=operation]").each(function(index, elemtent) {
    console.log(this.files[0]);
    if (this.files[0] != null) {
      data.append(this.name, this.files[0]);
    }
  });
  data.append("csrfmiddlewaretoken", $("input[name=csrfmiddlewaretoken]").val());
  data.append("type", "files");
  data.append("pro", $("input[name=pro]").val());
  data.append("sub", $("input[name=sub]").val());
  console.log(data);
  $.ajax({
    data: data,
    url: "",
    type: "POST",
    dataType: "json",
    cache: false,
    processData: false,
    contentType: false,
    success: function(response) {
      console.log(response);
      if (response.status) {
        return location.reload();
      } else {
        return $().toastmessage("showErrorToast", "Error al subir los archivos al servidor");
      }
    }
  });
};

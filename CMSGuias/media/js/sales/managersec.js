// Generated by CoffeeScript 1.7.1
var addMaterial, delMaterials, delPlane, dellAllMaterial, editBrandandModel, editMaterials, listMaterials, openAddMaterial, openBrand, openModel, panelPlanes, uploadPlane, viewFull;

$(document).ready(function() {
  $(".panel-add,input[name=read],.step-second").hide();
  $(".panel-add-mat, .view-full").hide();
  $(".btn-show-mat").on("click", openAddMaterial);
  $("input[name=plane]").on("change", uploadPlane);
  $(".btn-show-planes").on("click", panelPlanes);
  $("[name=show-full]").on("click", viewFull);
  $("[name=plane-del]").on("click", delPlane);
  $(".btn-add").on("click", addMaterial);
  $(".btn-show-del").on("click", dellAllMaterial);
  $(".btn-new-brand").on("click", openBrand);
  $(".btn-new-model").on("click", openModel);
  $("[name=show-plane]").on("click", function(event) {
    return $("input[name=plane]").click();
  });
  $(document).on("click", ".btn-del-mat", delMaterials);
  $(".btn-save-edit").on("click", editMaterials);
  $(document).on("click", ".btn-show-edit", function() {
    var $materials;
    $(".btn-save-edit").val(this.value);
    $materials = $("." + this.value + " > td");
    editBrandandModel($materials.eq(5).text(), $materials.eq(6).text());
    $(".text-edit").text("" + ($materials.eq(2).text()) + " " + ($materials.eq(3).text()));
    $("input[name=edit-materials]").val($materials.eq(1).text());
    $("input[name=edit-quantity]").val($materials.eq(7).text());
    $("input[name=edit-price]").val($materials.eq(8).text());
    return $(".medit").modal("toggle");
  });
  $("select[name=edit-brand]").on("change", function(event) {
    return $.getJSON("/json/model/list/option/", {
      "brand": $("select[name=edit-brand]").val()
    }, function(response) {
      var $model, template, x;
      if (response.status) {
        template = "<option value=\"{{ model_id }}\" title>{{ model }}</option>";
        $model = $("select[name=edit-model]");
        $model.empty();
        for (x in response.model) {
          if (model === response.model[x].model) {
            $model.append(Mustache.render(template.replace("title", "selected"), response.model[x]));
          } else {
            $model.append(Mustache.render(template, response.model[x]));
          }
        }
      }
    });
  });
});

editBrandandModel = function(brand, model) {
  $.getJSON("/json/brand/list/option/", function(response) {
    var $brand, template, x;
    if (response.status) {
      template = "<option value=\"{{ brand_id }}\" title>{{ brand }}</option>";
      $brand = $("select[name=edit-brand]");
      $brand.empty();
      for (x in response.brand) {
        if (brand === response.brand[x].brand) {
          $brand.append(Mustache.render(template.replace("title", "selected"), response.brand[x]));
        } else {
          $brand.append(Mustache.render(template, response.brand[x]));
        }
      }
      $.getJSON("/json/model/list/option/", {
        "brand": $("select[name=edit-brand]").val()
      }, function(response) {
        var $model;
        if (response.status) {
          template = "<option value=\"{{ model_id }}\" title>{{ model }}</option>";
          $model = $("select[name=edit-model]");
          $model.empty();
          for (x in response.model) {
            if (model === response.model[x].model) {
              $model.append(Mustache.render(template.replace("title", "selected"), response.model[x]));
            } else {
              $model.append(Mustache.render(template, response.model[x]));
            }
          }
        }
      });
    }
  });
};

openBrand = function() {
  var interval, url, win;
  url = "/brand/new/";
  win = window.open(url, "Popup", "toolbar=no, scrollbars=yes, resizable=no, width=400, height=600");
  interval = window.setInterval(function() {
    if (win === null || win.closed) {
      window.clearInterval(interval);
      searchBrandOption();
    }
  }, 1000);
  return win;
};

openModel = function() {
  var interval, url, win;
  url = "/model/new/";
  win = window.open(url, "Popup", "toolbar=no, scrollbars=yes, resizable=no, width=400, height=600");
  interval = window.setInterval(function() {
    if (win === null || win.closed) {
      window.clearInterval(interval);
      searchModelOption();
    }
  }, 1000);
  return win;
};

openAddMaterial = function(event) {
  event.preventDefault();
  $(".panel-add-mat").toggle(function() {
    if ($(this).is(":hidden")) {
      return $(".btn-show-mat").find("span").removeClass("glyphicon-chevron-up").addClass("glyphicon-chevron-down");
    } else {
      return $(".btn-show-mat").find("span").removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-up");
    }
  });
};

uploadPlane = function(event) {
  var data;
  if (this.files[0] !== null) {
    data = new FormData();
    data.append("type", "plane");
    data.append("files", this.files[0]);
    data.append("proyecto", $("input[name=pro]").val());
    data.append("subproyecto", $("input[name=sub]").val());
    data.append("sector", $("input[name=sec]").val());
    data.append("csrfmiddlewaretoken", $("[name=csrfmiddlewaretoken]").val());
    $.ajax({
      data: data,
      url: "",
      type: "POST",
      dataType: "json",
      cache: false,
      processData: false,
      contentType: false,
      success: function(response) {
        if (response.status) {
          return location.reload();
        } else {
          return $().toastmessage("showErrorToast", "No se ha cargado un archivo.");
        }
      }
    });
  } else {
    $().toastmessage("showWarningToast", "No se ha cargado un archivo.");
  }
};

panelPlanes = function(event) {
  var btn;
  btn = this;
  $(".panel-planes > .panel-body").toggle(function() {
    if ($(".panel-planes > .panel-body").is(":hidden")) {
      return $(btn).find("span").removeClass("glyphicon-chevron-up").addClass("glyphicon-chevron-down");
    } else {
      return $(btn).find("span").removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-up");
    }
  });
};

viewFull = function(event) {
  var btn;
  btn = this;
  $(".view-full").toggle(function() {
    if ($(this).is(":hidden")) {
      $(".navbar").show("blind", 600);
    } else {
      $(".navbar").hide("blind", 600);
      $("#planefull").attr("src", btn.value);
    }
  });
};

delPlane = function(event) {
  var data;
  data = new Object();
  data.type = "delplane";
  data.files = this.value;
  data.pro = $("input[name=pro]").val();
  data.sub = $("input[name=sub]").val();
  data.sec = $("input[name=sec]").val();
  data.csrfmiddlewaretoken = $("[name=csrfmiddlewaretoken]").val();
  $().toastmessage("showToast", {
    "text": "Desea eliminar el <q>Plano</q>?",
    "type": "confirm",
    "sticky": true,
    buttons: [
      {
        value: 'Si'
      }, {
        value: 'No'
      }
    ],
    success: function(result) {
      if (result === "Si") {
        return $.post("", data, function(response) {
          if (response.status) {
            return location.reload();
          } else {
            return $().toastmessage("showWarningToast", "Error, al eliminar el plano.");
          }
        });
      }
    }
  });
};

addMaterial = function(event) {
  var currency, data, purchase;
  data = new Object();
  data.proyecto = $("input[name=pro]").val();
  data.subproyecto = $("input[name=sub]").val();
  data.sector = $("input[name=sec]").val();
  data.csrfmiddlewaretoken = $("[name=csrfmiddlewaretoken]").val();
  data.type = "add";
  data.materiales = $(".id-mat").text();
  data.cantidad = $("input[name=cantidad]").val();
  data.precio = $("input[name=precio]").val();
  data.brand = $("select[name=brand]").val();
  data.model = $("select[name=model]").val();
  if (data.materiales !== "" && data.cantidad !== "" && data.precio !== "") {
    currency = $("select[name=moneda]").val();
    if ($("[name=currency]").val() !== currency) {
      purchase = $("[name=" + ($("[name=currency]").val()) + "]").val();
      data['precio'] = data['precio'] * parseFloat(purchase);
    }
    $.post("", data, function(response) {
      if (response.status) {
        return listMaterials();
      } else {
        return $().toastmessage("showErrorToast", "No found Transaction " + response.raise);
      }
    }, "json");
    return;
  } else {
    $().toastmessage("showWarningToast", "Existe campos vacio.");
  }
};

listMaterials = function() {
  var data;
  data = new Object();
  data.pro = $("input[name=pro]").val();
  data.sub = $("input[name=sub]").val();
  data.sec = $("input[name=sec]").val();
  data.type = "list";
  $.getJSON("", data, function(response) {
    var $tb, template, x, _results;
    if (response.status) {
      template = "<tr class=\"{{ materials_id }}-{{ id }}\"> <td>{{ item }}</td> <td>{{ materials_id }}</td> <td>{{ name }}</td> <td>{{ measure }}</td> <td>{{ unit }}</td> <td>{{ brand }}</td> <td>{{ model }}</td> <td>{{ quantity }}</td> <td>{{ price }}</td> <td> <button class=\"btn btn-xs btn-link text-green btn-show-edit\" value=\"{{ materials_id }}-{{ id }}\"> <span class=\"glyphicon glyphicon-pencil\"></span> </button> </td> <td> <button class=\"btn btn-xs btn-link text-red btn-del-mat\" value=\"{{ materials_id }}-{{ id }}\"> <span class=\"glyphicon glyphicon-trash\"></span> </button> </td> </tr>";
      $tb = $(".table-details > tbody");
      $tb.empty();
      _results = [];
      for (x in response.list) {
        response.list[x].item = parseInt(x) + 1;
        _results.push($tb.append(Mustache.render(template, response.list[x])));
      }
      return _results;
    }
  });
};

delMaterials = function(event) {
  var $materials;
  $materials = $("." + this.value + " > td");
  $().toastmessage("showToast", {
    "text": "Desea eliminar " + ($materials.eq(2).text()) + " " + ($materials.eq(3).text()) + "?",
    "sticky": true,
    "type": "confirm",
    "buttons": [
      {
        value: 'Si'
      }, {
        value: 'No'
      }
    ],
    "success": function(result) {
      var data;
      if (result === "Si") {
        data = new Object();
        data.pro = $("input[name=pro]").val();
        data.sub = $("input[name=sub]").val();
        data.sec = $("input[name=sec]").val();
        data.materials = $materials.eq(1).text();
        data.csrfmiddlewaretoken = $("[name=csrfmiddlewaretoken]").val();
        data.type = "del";
        $.post("", data, function(response) {
          if (response.status) {
            $("." + this.value).remove();
            $(".table-details > tbody > tr").each(function(index, element) {
              return element.find("td").eq(0).text(index + 1);
            });
          } else {
            return $().toastmessage("showWarningToast", "No se elimino el material.");
          }
        });
      }
    }
  });
};

editMaterials = function(event) {
  var btn, currency, data, purchase;
  btn = this;
  data = new Object();
  data.proyecto = $("input[name=pro]").val();
  data.subproyecto = $("input[name=sub]").val();
  data.sector = $("input[name=sec]").val();
  data.materiales = $("input[name=edit-materials]").val();
  data.cantidad = $("input[name=edit-quantity]").val();
  data.precio = $("input[name=edit-price]").val();
  data.brand = $("select[name=edit-brand]").val();
  data.model = $("select[name=edit-model]").val();
  data.csrfmiddlewaretoken = $("[name=csrfmiddlewaretoken]").val();
  data.type = "add";
  data.edit = true;
  if (data.cantidad !== "" && data.precio !== "") {
    currency = $("select[name=moneda-e]").val();
    if ($("[name=currency]").val() !== currency) {
      purchase = $("[name=" + ($("[name=currency]").val()) + "]").val();
      data.precio = data.precio * purchase;
    }
    $.post("", data, function(response) {
      var $materials;
      if (response.status) {
        $materials = $("." + btn.value + " > td");
        $materials.eq(5).text($("select[name=edit-brand]").text());
        $materials.eq(6).text($("select[name=edit-model]").text());
        $materials.eq(7).text(data.cantidad);
        $materials.eq(8).text(data.precio);
        return $(".medit").modal("toggle");
      } else {
        return $().toastmessage("showWarningToast", "No se edito el material.");
      }
    });
  } else {
    $().toastmessage("showWarningToast", "Existen campos vacios o menores a uno.");
  }
};

dellAllMaterial = function(event) {
  $().toastmessage("showToast", {
    "text": "Desea eliminar toda la lista de materiales?",
    "sticky": true,
    "type": "confirm",
    "buttons": [
      {
        value: 'Si'
      }, {
        value: 'No'
      }
    ],
    "success": function(result) {
      var data;
      if (result === "Si") {
        data = new Object();
        data.pro = $("input[name=pro]").val();
        data.sub = $("input[name=sub]").val();
        data.sec = $("input[name=sec]").val();
        data.csrfmiddlewaretoken = $("[name=csrfmiddlewaretoken]").val();
        data.type = "killdata";
        $.post("", data, function(response) {
          if (response.status) {
            return location.reload();
          } else {
            return $().toastmessage("showWarningToast", "No se elimino la lista de materiales.");
          }
        });
      }
    }
  });
};

// Generated by CoffeeScript 1.7.1
var counter_materials_global, getDescription, getMeters, getSummaryMaterials, getidli, keyCode, keyDescription, keyUpDescription, mat, moveTopBottom, searchBrandOption, searchMaterial, searchMaterialCode, searchModelOption, selectMaterial;

mat = new Object;

counter_materials_global = 0;

getDescription = function(name) {
  $.getJSON("/json/get/materials/name/", {
    nom: name
  }, function(response) {
    var $opt, i, template, x;
    template = "<li id='li{{ id }}' onClick=getidli(this);><a class='text-primary' onClick='selectMaterial(this);'>{{ matnom }}</a></li>";
    $opt = $(".matname-global");
    $opt.empty();
    i = 0;
    for (x in response.name) {
      response.name[x].id = i;
      $opt.append(Mustache.render(template, response.name[x]));
      i += 1;
    }
    $(".matname-global").show();
    $("[name=description]").focus().after($(".matname-global"));
  });
};

getidli = function(item) {
  $("[name=description]").val($("#" + item.id + " > a").text()).focus();
  $(".matname-global").hide();
  counter_materials_global = 0;
  getMeters();
};

selectMaterial = function(all) {
  $("[name=description]").val(all.innerHTML).focus();
  $(".matname-global").hide();
  counter_materials_global = 0;
};

keyUpDescription = function(event) {
  var key;
  key = event.keyCode || event.which;
  if (key === 13) {
    if ($(".matname-global").is(":visible")) {
      $("[name=description]").val($(".item-selected > a").text());
      $(".matname-global").hide();
    }
    getMeters();
    counter_materials_global = 0;
  }
};

getMeters = function() {
  var $nom, data;
  $nom = $("[name=description]");
  if ($nom.val() !== "") {
    data = {
      matnom: $nom.val().trim()
    };
    $.getJSON("/json/get/meter/materials/", data, function(response) {
      var $med, template, x;
      template = "<option value='{{ matmed }}'>{{ matmed }}</option>";
      $med = $("[name=meter]");
      $med.empty();
      for (x in response.list) {
        $med.append(Mustache.render(template, response.list[x]));
      }
      getSummaryMaterials();
    });
  } else {
    console.warn("The Field Name is empty!");
  }
};

getSummaryMaterials = function() {
  var $med, $nom, data;
  $nom = $("[name=description]");
  $med = $("[name=meter]");
  if ($nom.val().trim() !== "" && $med.val() !== "") {
    data = {
      matnom: $nom.val(),
      matmed: $med.val()
    };
    $.getJSON("/json/get/resumen/details/materiales/", data, function(response) {
      var $tb, template, x;
      template = "<tr><th>Codigo :</th><td class='id-mat'>{{materialesid}}</td></tr><tr><th>Descripción :</th><td>{{matnom}}</td></tr><tr><th>Medida :</th><td>{{matmed}}</td></tr><tr><th>Unidad :</th><td>{{unidad}}</td></tr>";
      $tb = $(".tb-details > tbody");
      $tb.empty();
      for (x in response.list) {
        $tb.append(Mustache.render(template, response.list[x]));
      }
      searchBrandOption();
    });
  }
};

moveTopBottom = function(key) {
  var code, liSelected, ul;
  code = key;
  ul = document.getElementById("matname-global");
  if (code === 40) {
    if ($("#matname-global li.item-selected").length === 0) {
      $("#matname-global li:first").addClass("item-selected");
    } else {
      $("#matname-global li:first").addClass("item-selected");
    }
  } else if (code === 38) {
    $("#matname-global li.item-selected").removeClass("item-selected");
  } else if (code === 39) {
    liSelected = $("#matname-global li.item-selected");
    if (liSelected.length === 1 && liSelected.next().length === 1) {
      liSelected.removeClass("item-selected").next().addClass("item-selected");
      if (counter_materials_global > 9) {
        ul.scrollTop += 30;
      }
      counter_materials_global++;
    }
  } else if (code === 37) {
    liSelected = $("#matname-global li.item-selected");
    if (liSelected.length === 1 && liSelected.prev().length === 1) {
      liSelected.removeClass("item-selected").prev().addClass("item-selected");
      if (counter_materials_global > 9) {
        ul.scrollTop -= 30;
      }
      counter_materials_global--;
    }
  }
};

searchMaterialCode = function(code) {
  var data, pass;
  pass = false;
  if (code.length < 15 || code.length > 15) {
    $().toastmessage("showWarningToast", "Format Code Invalid!");
    pass = false;
  } else {
    if (code.length === 15) {
      pass = true;
    }
  }
  if (pass) {
    data = new Object();
    data["code"] = code;
    $.getJSON("/json/get/materials/code/", data, function(response) {
      var $met, $tb, mats, template;
      mats = response;
      if (response.status) {
        $met = $("[name=meter]");
        $met.empty();
        $met.append(Mustache.render("<option value='{{ matmed }}'>{{ matmed }}</option>", response.list));
        $("[name=description]").val(response.list.matnom);
        template = "<tr><th>Codigo :</th><td class='id-mat'>{{materialesid}}</td></tr>" + "<tr><th>Descripción :</th><td>{{matnom}}</td></tr>" + "<tr><th>Medida :</th><td>{{matmed}}</td></tr>" + "<tr><th>Unidad :</th><td>{{unidad}}</td></tr>";
        $tb = $(".tb-details > tbody");
        $tb.empty();
        $tb.append(Mustache.render(template, response.list));
        searchBrandOption();
      } else {
        $().toastmessage("showWarningToast", "The material not found.");
      }
    });
  }
};

searchBrandOption = function() {
  $.getJSON("/json/brand/list/option/", function(response) {
    var $brand, template, x;
    if (response.status) {
      template = "<option value=\"{{ brand_id }}\">{{ brand }}</option>";
      $brand = $("select[name=brand]");
      $brand.empty();
      for (x in response.brand) {
        $brand.append(Mustache.render(template, response.brand[x]));
      }
    } else {
      $().toastmessage("showWarningToast", "No se a podido obtener la lista de marcas.");
    }
  });
};

searchModelOption = function() {
  var brand, data;
  brand = $("select[name=brand]").val();
  if (brand !== "") {
    data = {
      brand: brand
    };
    $.getJSON("/json/model/list/option/", data, function(response) {
      var $model, template, x;
      if (response.status) {
        template = "<option value=\"{{ model_id }}\">{{ model }}</option>";
        $model = $("select[name=model]");
        $model.empty();
        for (x in response.model) {
          $model.append(Mustache.render(template, response.model[x]));
        }
      } else {
        $().toastmessage("showWarningToast", "No se a podido obtener la lista de marcas.");
      }
    });
  }
};

keyDescription = function(event) {
  var key;
  key = void 0;
  key = (window.Event ? event.keyCode : event.which);
  if (key !== 13 && key !== 40 && key !== 38 && key !== 39 && key !== 37) {
    getDescription(this.value.toLowerCase());
  }
  if (key === 40 || key === 38 || key === 39 || key === 37) {
    moveTopBottom(key);
  }
};

keyCode = function(event) {
  var key;
  key = void 0;
  key = (window.Event ? event.keyCode : event.which);
  if (key === 13) {
    return searchMaterialCode(this.value);
  }
};

searchMaterial = function(event) {
  var code, desc;
  code = void 0;
  desc = void 0;
  desc = $("input[name=description]").val();
  code = $("input[name=code]").val();
  if (code.length === 15) {
    return searchMaterialCode(code);
  } else {
    return getDescription($.trim(desc).toLowerCase());
  }
};

$(document).on("click", "select[name=brand]", function(event) {
  searchModelOption();
});

$(document).on("keyup", "input[name=description]", keyDescription);

$(document).on("keypress", "input[name=description]", keyUpDescription);

$(document).on("click", "select[name=meter]", getSummaryMaterials);

$(document).on("keypress", "input[name=code]", keyCode);
